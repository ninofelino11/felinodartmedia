package com.dartmedia.felino.form;
import com.dartmedia.felino.gSqlContainer;
import com.dartmedia.felino.fgetsql;
import com.dartmedia.felino.gSqlContainer;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import org.vaadin.maddon.fields.MTable;
import com.vaadin.event.LayoutEvents;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.TextField;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.DateField;
import com.vaadin.ui.PopupDateField;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import javax.annotation.PostConstruct;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("SafeStockManage")
public class SafeStockManageView extends MVerticalLayout implements View {
//SafeStockManageSvc data=new SafeStockManageSvc();
    @PostConstruct
    public void initComponent() {
// @Inject
//TbrandForm form;
/**Warehouse <p:selectOneListbox id="basic"> </p:selectOneListbox>     Sale type <p:selectOneListbox id="basic"> </p:selectOneListbox>     Item <p:inputText /> **/
StringBuffer sb = new StringBuffer();
sb.append("SELECT");
sb.append("*");
sb.append("FROM");
sb.append("(");
sb.append("SELECT");
sb.append("TC.WH_CODE");
sb.append(",");
sb.append("TA.SALE_GB");
sb.append(",");
sb.append("TA.GOODS_CODE");
sb.append(",");
sb.append("TA.GOODS_NAME");
sb.append(",");
sb.append("TB.GOODSDT_CODE");
sb.append(",");
sb.append("TB.GOODSDT_INFO");
sb.append(",");
sb.append("DECODE(TD.GOODS_CODE,");
sb.append("NULL,");
sb.append("'I',");
sb.append("'U')");
sb.append("AS");
sb.append("DATA_GB");
sb.append(",");
sb.append("NVL(TD.SAFE_QTY,0)");
sb.append("AS");
sb.append("SAFE_QTY");
sb.append(",");
sb.append("NVL(TD.AQTY,");
sb.append("0)");
sb.append("AS");
sb.append("REAL_AQTY");
sb.append(",");
sb.append("TC.ORDER_QTY");
sb.append(",");
sb.append("TC.OUT_PLAN_QTY");
sb.append(",");
sb.append("(");
sb.append("SELECT");
sb.append("NVL(SUM(BDT.BALJU_QTY),");
sb.append("0)");
sb.append("FROM");
sb.append("TBALJUM");
sb.append("BM");
sb.append(",");
sb.append("TBALJUDT");
sb.append("BDT");
sb.append("WHERE");
sb.append("BM.BALJU_NO");
sb.append("=");
sb.append("BDT.BALJU_NO");
sb.append("AND");
sb.append("BM.WH_CODE");
sb.append("=");
sb.append("TC.WH_CODE");
sb.append("AND");
sb.append("BDT.GOODS_CODE");
sb.append("=");
sb.append("TC.GOODS_CODE");
sb.append("AND");
sb.append("BDT.GOODSDT_CODE");
sb.append("=");
sb.append("TC.GOODSDT_CODE");
sb.append("AND");
sb.append("BM.IN_END_YN");
sb.append("=");
sb.append("'0'");
sb.append("AND");
sb.append("BM.CANCEL_YN");
sb.append("=");
sb.append("'0'");
sb.append(")");
sb.append("AS");
sb.append("BALJU_QTY");
sb.append(",");
sb.append("(");
sb.append("SELECT");
sb.append("NVL(SUM(OM.DO_FLAG),");
sb.append("0)");
sb.append("FROM");
sb.append("TWHMOVEOUTM");
sb.append("OM");
sb.append(",");
sb.append("TWHMOVEOUTDT");
sb.append("ODT");
sb.append("WHERE");
sb.append("OM.MOVE_OUT_SEQ");
sb.append("=");
sb.append("ODT.MOVE_OUT_SEQ");
sb.append("AND");
sb.append("OM.DO_FLAG");
sb.append("<");
sb.append("'40'");
sb.append("AND");
sb.append("OM.WH_OUT_CODE");
sb.append("=");
sb.append("TC.WH_CODE");
sb.append("AND");
sb.append("ODT.GOODS_CODE");
sb.append("=");
sb.append("TC.GOODS_CODE");
sb.append("AND");
sb.append("ODT.GOODSDT_CODE=");
sb.append("TC.GOODSDT_CODE");
sb.append(")");
sb.append("AS");
sb.append("M_OUT_PLAN_AQTY");
sb.append(",");
sb.append("(");
sb.append("SELECT");
sb.append("NVL(SUM(OUT_AQTY),");
sb.append("0)");
sb.append("FROM");
sb.append("TWHMOVEOUTM");
sb.append("OM");
sb.append(",");
sb.append("TWHMOVEOUTDT");
sb.append("ODT");
sb.append("WHERE");
sb.append("OM.MOVE_OUT_SEQ");
sb.append("=");
sb.append("ODT.MOVE_OUT_SEQ");
sb.append("AND");
sb.append("OM.DO_FLAG");
sb.append("<");
sb.append("'80'");
sb.append("AND");
sb.append("OM.WH_IN_CODE");
sb.append("=");
sb.append("TC.WH_CODE");
sb.append("AND");
sb.append("ODT.GOODS_CODE");
sb.append("=");
sb.append("TC.GOODS_CODE");
sb.append("AND");
sb.append("ODT.GOODSDT_CODE=");
sb.append("TC.GOODSDT_CODE");
sb.append(")");
sb.append("AS");
sb.append("M_IN_PLAN_AQTY");
sb.append("FROM");
sb.append("TGOODS");
sb.append("TA");
sb.append(",");
sb.append("TGOODSDT");
sb.append("TB");
sb.append(",");
sb.append("TORDERSTOCK");
sb.append("TC");
sb.append(",");
sb.append("TSTOCK");
sb.append("TD");
sb.append("WHERE");
sb.append("TA.GOODS_CODE");
sb.append("=");
sb.append("TB.GOODS_CODE");
sb.append("AND");
sb.append("TB.GOODS_CODE");
sb.append("=");
sb.append("TC.GOODS_CODE");
sb.append("AND");
sb.append("TB.GOODSDT_CODE");
sb.append("=");
sb.append("TC.GOODSDT_CODE");
sb.append("AND");
sb.append("TC.WH_CODE");
sb.append("=");
sb.append("TD.WH_CODE(+)");
sb.append("AND");
sb.append("TC.GOODS_CODE");
sb.append("=");
sb.append("TD.GOODS_CODE(+)");
sb.append("AND");
sb.append("TC.GOODSDT_CODE");
sb.append("=");
sb.append("TD.GOODSDT_CODE(+)");
sb.append("AND");
sb.append("TC.WH_CODE");
sb.append("=");
sb.append("'001'");
sb.append("AND");
sb.append("TA.SALE_GB");
sb.append("=");
sb.append("'00'");
sb.append("/*");
sb.append("AND");
sb.append("TA.GOODS_CODE");
sb.append("=");
sb.append("'101800'");
sb.append("*/");
sb.append(")");
sb.append("XA");
sb.append("WHERE");
sb.append("1=1");
sb.append("/*");
sb.append("<if");
sb.append("test='checkVal");
sb.append("==");
//sb.append(""1"'>");
sb.append("*/");
sb.append("AND");
sb.append("XA.SAFE_QTY");
sb.append("<");
sb.append("XA.REAL_AQTY");
sb.append("-");
sb.append("(");
sb.append("XA.ORDER_QTY");
sb.append("+");
sb.append("XA.OUT_PLAN_QTY");
sb.append(")");
sb.append("+");
sb.append("BALJU_QTY");
sb.append("-");
sb.append("M_OUT_PLAN_AQTY");
sb.append("+");
sb.append("M_IN_PLAN_AQTY");
sb.append("/*");
sb.append("</if>");
sb.append("*/");
sb.append("ORDER");
sb.append("BY");
sb.append("WH_CODE,");
sb.append("GOODS_CODE,");
sb.append("GOODSDT_CODE");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------
toolbar.addComponent(new ComboBox("Ware House"));
toolbar.addComponent(new Button("Print"));
toolbar.addComponent(new CheckBox("Safe Stock Target"));
toolbar.addComponent(new ComboBox("My ComboBox"));
toolbar.addComponent(new Button("Pp Create"));
toolbar.addComponent(new Button("Wh Transfer"));


//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("Safe Stock Manage (SafeStockManage)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
        addComponents(isicontents);
MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
table.addContainerProperty("No", String.class,  null);
table.addContainerProperty("ITEM", String.class,  null);
table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
   isicontents.addComponents(table);
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
