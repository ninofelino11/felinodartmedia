package com.dartmedia.felino.form;
import com.dartmedia.felino.gSqlContainer;
import com.dartmedia.felino.fgetsql;
import com.dartmedia.felino.gSqlContainer;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import org.vaadin.maddon.fields.MTable;
import com.vaadin.event.LayoutEvents;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.TextField;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.DateField;
import com.vaadin.ui.PopupDateField;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import javax.annotation.PostConstruct;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("AnalysisUser")
public class AnalysisUserView extends MVerticalLayout implements View {
//AnalysisUserSvc data=new AnalysisUserSvc();
    @PostConstruct
    public void initComponent() {
// @Inject
//TbrandForm form;
/****/
StringBuffer sb = new StringBuffer();
sb.append("SELECT");
sb.append("/*");
sb.append("orderreport.xml");
sb.append(":");
sb.append("custcenter.orderreport.selectAnalysisUser");
sb.append("by");
sb.append("AnalysisUser");
sb.append("*/");
sb.append("TO_CHAR(TRUNC(A.GATHER_DATE,");
sb.append("'MONTH'),");
sb.append("'YYYY/MM'");
sb.append(")");
sb.append("AS");
sb.append("GATHER_DATE");
sb.append(",");
sb.append("A.INSERT_ID");
sb.append("AS");
sb.append("INSERT_ID");
sb.append(",");
sb.append("C.USER_NAME");
sb.append("AS");
sb.append("USER_NAME");
sb.append(",");
sb.append("SUM(A.ORDER_QTY)");
sb.append("AS");
sb.append("ORDER_QTY");
sb.append(",");
sb.append("SUM(A.ORDER_AMT)");
sb.append("AS");
sb.append("ORDER_AMT");
sb.append(",");
sb.append("SUM(A.CANCEL_QTY)");
sb.append("AS");
sb.append("CANCEL_QTY");
sb.append(",");
sb.append("SUM(A.CANCEL_AMT)");
sb.append("AS");
sb.append("CANCEL_AMT");
sb.append(",");
sb.append("NVL(SUM(A.CLAIM_QTY),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CLAIM_CAN_QTY),");
sb.append("0)");
sb.append("AS");
sb.append("CLAIM_QTY");
sb.append(",");
sb.append("NVL(SUM(A.CLAIM_AMT),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CLAIM_CAN_AMT),");
sb.append("0)");
sb.append("AS");
sb.append("CLAIM_AMT");
sb.append(",");
sb.append("NVL(SUM(A.EXCH_QTY");
sb.append("),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.EXCH_CAN_QTY");
sb.append("),");
sb.append("0)");
sb.append("AS");
sb.append("EXCH_QTY");
sb.append(",");
sb.append("NVL(SUM(A.EXCH_AMT");
sb.append("),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.EXCH_CAN_AMT");
sb.append("),");
sb.append("0)");
sb.append("AS");
sb.append("EXCH_AMT");
sb.append(",");
sb.append("(");
sb.append("NVL(SUM(A.ORDER_QTY),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CANCEL_QTY),");
sb.append("0)");
sb.append(")");
sb.append("-");
sb.append("(");
sb.append("NVL(SUM(A.CLAIM_QTY),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CLAIM_CAN_QTY),");
sb.append("0)");
sb.append(")");
sb.append("AS");
sb.append("NET_ORDER_QTY");
sb.append(",");
sb.append("(");
sb.append("NVL(SUM(A.ORDER_AMT),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CANCEL_AMT),");
sb.append("0)");
sb.append(")");
sb.append("-");
sb.append("(");
sb.append("NVL(SUM(A.CLAIM_AMT),");
sb.append("0)");
sb.append("-");
sb.append("NVL(SUM(A.CLAIM_CAN_AMT),");
sb.append("0)");
sb.append(")");
sb.append("AS");
sb.append("NET_ORDER_AMT");
sb.append(",");
sb.append("SUM(A.SHIPFEE_AMT)");
sb.append("AS");
sb.append("SHIPFEE_AMT");
sb.append(",");
sb.append("SUM(A.SHIPFEE_CAN_AMT)");
sb.append("AS");
sb.append("SHIPFEE_CAN_AMT");
sb.append(",");
sb.append("SUM(A.SHIPFEE_AMT)");
sb.append("-");
sb.append("SUM(A.SHIPFEE_CAN_AMT)");
sb.append("AS");
sb.append("NET_SHIPFEE_AMT");
sb.append("FROM");
sb.append("TUSER");
sb.append("C");
sb.append(",");
sb.append("TMEDIA");
sb.append("B");
sb.append(",");
sb.append("TSDTM");
sb.append("A");
sb.append("WHERE");
sb.append("C.USER_ID");
sb.append("=");
sb.append("A.INSERT_ID");
sb.append("AND");
sb.append("B.MEDIA_CODE");
sb.append("=");
sb.append("A.MEDIA_CODE");
sb.append("AND");
sb.append("A.GATHER_DATE");
sb.append("BETWEEN");
sb.append("TO_DATE('2014-01-01',");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("TO_DATE('2014-01-01',");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("A.ORDER_MEDIA");
sb.append("=");
sb.append("'order_media'");
sb.append("AND");
sb.append("A.MEDIA_CODE");
sb.append("=");
sb.append("'media_code'");
sb.append("AND");
sb.append("B.MEDIA_GB");
sb.append("=");
sb.append("'media_gb'");
sb.append("AND");
sb.append("C.USER_GB");
sb.append("=");
sb.append("'user_gb'");
sb.append("AND");
sb.append("A.INSERT_ID");
sb.append("=");
sb.append("'insert_id'");
sb.append("GROUP");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("'DDD'),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
sb.append("ORDER");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("'DDD'),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
sb.append("GROUP");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("'MONTH'),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
sb.append("ORDER");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("'MONTH'),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
sb.append("GROUP");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("''),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
sb.append("ORDER");
sb.append("BY");
sb.append("TRUNC(A.GATHER_DATE,");
sb.append("''),");
sb.append("A.INSERT_ID,");
sb.append("C.USER_NAME");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------
toolbar.addComponent(new PopupDateField("Term"));
toolbar.addComponent(new PopupDateField("~"));

toolbar.addComponent(new CheckBox("Indv.Query"));
toolbar.addComponent(new ComboBox("Order Media"));
toolbar.addComponent(new ComboBox("My ComboBox"));


//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("Agent Order Report (AnalysisUser)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
        addComponents(isicontents);
MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
table.addContainerProperty("No", String.class,  null);
table.addContainerProperty("ITEM", String.class,  null);
table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
   isicontents.addComponents(table);
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
