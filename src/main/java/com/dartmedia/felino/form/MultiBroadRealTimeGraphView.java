package com.dartmedia.felino.form;
import com.dartmedia.felino.gSqlContainer;
import com.dartmedia.felino.fgetsql;
import com.dartmedia.felino.gSqlContainer;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import org.vaadin.maddon.fields.MTable;
import com.vaadin.event.LayoutEvents;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.TextField;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.DateField;
import com.vaadin.ui.PopupDateField;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import javax.annotation.PostConstruct;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("MultiBroadRealTimeGraph")
public class MultiBroadRealTimeGraphView extends MVerticalLayout implements View {
//MultiBroadRealTimeGraphSvc data=new MultiBroadRealTimeGraphSvc();
    @PostConstruct
    public void initComponent() {
// @Inject
//TbrandForm form;
/****/
StringBuffer sb = new StringBuffer();
sb.append(" SELECT    /* broadresult.xml : broadcast.broadresult.selectMultiBroadRealTime by MultiBroadRealTimeGraphController */");
sb.append("                Y.SEQ_FRAME_NO        AS SEQ_FRAME_NO,");
sb.append("                   Y.SEQ_NO            AS SEQ_NO,");
sb.append("                   MAX(Y.SET_YN)       AS SET_YN,");
sb.append("                   Y.GOODS_CODE         AS GOODS_CODE,");
sb.append("                   Y.GOODS_NAME         AS GOODS_NAME,");
sb.append("                F.SALE_PRICE          AS SALE_PRICE,");
sb.append("                  SUM(H.ORDER_POSSIBLE_QTY) AS ORDER_POSSIBLE_QTY,");
sb.append("                SUM(Y.COUNSEL_QTY)  AS COUNSEL_QTY,");
sb.append("                TO_CHAR(MAX(Y.BTIME), 'HH24:MI')        AS BTIME,");
sb.append("                TO_CHAR(MAX(Y.ETIME), 'HH24:MI')        AS ETIME,");
sb.append("                MAX(TRUNC( DECODE(SIGN(LEAST(SYSDATE,NVL(Y.ETIME,SYSDATE))-Y.BD_BTIME),1,(LEAST(SYSDATE,NVL(Y.ETIME,SYSDATE))-Y.BD_BTIME),0) * 24 * 60)) AS RUN,");
sb.append("                DECODE(MAX(TRUNC( DECODE(SIGN(LEAST(SYSDATE,Y.ETIME)-Y.BD_BTIME),1,(LEAST(SYSDATE,Y.ETIME)-Y.BD_BTIME),0) * 24 * 60)), 0, 0, ");
sb.append("                    SUM(Y.ORDER_AMT) / MAX(TRUNC( DECODE(SIGN(LEAST(SYSDATE,Y.ETIME)-Y.BD_BTIME),1,(LEAST(SYSDATE,Y.ETIME)-Y.BD_BTIME),0) * 24 * 60))");
sb.append("                ) AS SALE_MIN,");
sb.append("                SUM(Y.ORDER_QTY)    AS ORDER_QTY,");
sb.append("                SUM(Y.ORDER_AMT)    AS ORDER_AMT,");
sb.append("                SUM(Y.CANCEL_QTY)   AS CANCEL_QTY,");
sb.append("                SUM(Y.CANCEL_AMT)   AS CANCEL_AMT,");
sb.append("                SUM(Y.NET_QTY)       AS NET_QTY,");
sb.append("                SUM(Y.NET_AMT)       AS NET_AMT,");
sb.append("                MAX(Y.SALE_TG_QTY)  AS SALE_TG_QTY,");
sb.append("                MAX(Y.SALE_GB)      AS SALE_GB,");
sb.append("                Y.STOCK_CHK_PLACE     AS STOCK_CHK_PLACE,");
sb.append("                  Y.SALE_END_TIME       AS SALE_END_TIME,");
sb.append("                SYSDATE");
sb.append("      FROM (");
sb.append("             SELECT C.BD_DATE                    AS BD_DATE,");
sb.append("                    C.BD_BTIME                   AS BD_BTIME,");
sb.append("                    C.PROG_CODE                  AS PROG_CODE,");
sb.append("                    C.SEQ_FRAME_NO               AS SEQ_FRAME_NO,");
sb.append("                    C.SEQ_NO                        AS SEQ_NO,");
sb.append("                    C.BD_FLAG                    AS BD_FLAG,");
sb.append("                    C.GOODS_CODE                 AS GOODS_CODE,");
sb.append("                    A.GOODS_NAME                 AS GOODS_NAME,");
sb.append("                      A.STOCK_CHK_PLACE             AS STOCK_CHK_PLACE,");
sb.append("                      FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE ) AS SALE_END_TIME,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', NVL(C.SALE_TG_QTY, 0), 0) AS SALE_TG_QTY,");
sb.append("                    C.BTIME                      AS BTIME,");
sb.append("                    C.ETIME                      AS ETIME,");
sb.append("                    0                            AS COUNSEL_QTY,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', B.ORDER_QTY, 0) AS ORDER_QTY,");
sb.append("                    B.RSALE_AMT                  AS ORDER_AMT,");
sb.append("                    0                            AS CANCEL_QTY,");
sb.append("                    0                            AS CANCEL_AMT,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', B.ORDER_QTY, 0) AS NET_QTY,");
sb.append("                    B.RSALE_AMT                  AS NET_AMT,");
sb.append("                    0                            AS ORDER_OK_QTY,");
sb.append("                    A.SET_YN                     AS SET_YN,");
sb.append("                    A.SALE_GB                    AS SALE_GB");
sb.append("               FROM TMULTIDTBROAD  C,");
sb.append("                    TGOODS    A,");
sb.append("                    TORDERDT  B");
sb.append("              WHERE  C.GOODS_CODE   = A.GOODS_CODE");
sb.append("                AND  C.BD_FLAG      = '20'");
sb.append("                AND  C.GOODS_CODE   = NVL(B.SET_GOODS_CODE, B.GOODS_CODE)");
sb.append("                AND  B.ORDER_DATE BETWEEN C.BTIME AND FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE)");
sb.append("                AND  B.MEDIA_GB     = '01'");
sb.append("                AND  B.MEDIA_CODE   = C.MEDIA_CODE");
sb.append("                AND  C.SEQ_FRAME_NO = 'seq_frame_no'");
sb.append("             UNION ALL");
sb.append("             SELECT C.BD_DATE                    AS BD_DATE,");
sb.append("                    C.BD_BTIME                   AS BD_BTIME,");
sb.append("                    C.PROG_CODE                  AS PROG_CODE,");
sb.append("                    C.SEQ_FRAME_NO               AS SEQ_FRAME_NO,");
sb.append("                    C.SEQ_NO                        AS SEQ_NO,");
sb.append("                    C.BD_FLAG                    AS BD_FLAG,");
sb.append("                    C.GOODS_CODE                 AS GOODS_CODE,");
sb.append("                    A.GOODS_NAME                 AS GOODS_NAME,");
sb.append("                      A.STOCK_CHK_PLACE             AS STOCK_CHK_PLACE,");
sb.append("                      FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE)  AS SALE_END_TIME,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', NVL(C.SALE_TG_QTY, 0), 0) AS SALE_TG_QTY,");
sb.append("                    C.BTIME                      AS BTIME,");
sb.append("                    C.ETIME                      AS ETIME,");
sb.append("                    0                            AS COUNSEL_QTY,");
sb.append("                    0                            AS ORDER_QTY,");
sb.append("                    0                            AS ORDER_AMT,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', B.CANCEL_QTY, 0) AS CANCEL_QTY,");
sb.append("                    B.RSALE_AMT                  AS CANCEL_AMT,");
sb.append("                    -(DECODE(B.ORDER_D_SEQ, '001', B.CANCEL_QTY, 0)) AS NET_QTY,");
sb.append("                    -(B.RSALE_AMT)                  AS NET_AMT,");
sb.append("                    0                            AS ORDER_OK_QTY,");
sb.append("                    A.SET_YN                     AS SET_YN,");
sb.append("                    A.SALE_GB                    AS SALE_GB");
sb.append("               FROM TMULTIDTBROAD   C,");
sb.append("                    TGOODS     A,");
sb.append("                    TCANCELDT  B");
sb.append("              WHERE C.GOODS_CODE = A.GOODS_CODE");
sb.append("                AND C.BD_FLAG    = '20'");
sb.append("                AND C.GOODS_CODE = NVL(B.SET_GOODS_CODE, B.GOODS_CODE)");
sb.append("                AND B.MEDIA_GB   = '01'");
sb.append("                AND C.MEDIA_CODE = B.MEDIA_CODE");
sb.append("                AND B.CANCEL_DATE BETWEEN C.BTIME  AND FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE,C.MEDIA_CODE)");
sb.append("                AND C.SEQ_FRAME_NO = 'seq_frame_no'");
sb.append("             UNION ALL");
sb.append("             SELECT C.BD_DATE                    AS BD_DATE,");
sb.append("                    C.BD_BTIME                   AS BD_BTIME,");
sb.append("                    C.PROG_CODE                  AS PROG_CODE,");
sb.append("                    C.SEQ_FRAME_NO               AS SEQ_FRAME_NO,");
sb.append("                    C.SEQ_NO                        AS SEQ_NO,");
sb.append("                    C.BD_FLAG                    AS BD_FLAG,");
sb.append("                    C.GOODS_CODE                 AS GOODS_CODE,");
sb.append("                    A.GOODS_NAME                 AS GOODS_NAME,");
sb.append("                      A.STOCK_CHK_PLACE             AS STOCK_CHK_PLACE,");
sb.append("                      FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE) AS SALE_END_TIME,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', NVL(C.SALE_TG_QTY, 0), 0) AS SALE_TG_QTY,");
sb.append("                    C.BTIME                      AS BTIME,");
sb.append("                    C.ETIME                      AS ETIME,");
sb.append("                    0                            AS COUNSEL_QTY,");
sb.append("                    0                            AS ORDER_QTY,");
sb.append("                    0                            AS ORDER_AMT,");
sb.append("                    DECODE(B.ORDER_D_SEQ, '001', B.SYSLAST, 0) AS CANCEL_QTY,");
sb.append("                    B.SYSLAST_AMT                AS CANCEL_AMT,");
sb.append("                    -(DECODE(B.ORDER_D_SEQ, '001', B.SYSLAST, 0)) AS NET_QTY,");
sb.append("                    -(B.SYSLAST_AMT)                AS NET_AMT,");
sb.append("                    0                            AS ORDER_OK_QTY,");
sb.append("                    A.SET_YN                     AS SET_YN,");
sb.append("                    A.SALE_GB                    AS SALE_GB");
sb.append("               FROM TMULTIDTBROAD  C,");
sb.append("                    TGOODS    A,");
sb.append("                    TCLAIMDT  B");
sb.append("              WHERE C.GOODS_CODE   = A.GOODS_CODE");
sb.append("                AND C.BD_FLAG      = '20'");
sb.append("                AND C.GOODS_CODE   = NVL(B.SET_GOODS_CODE, B.GOODS_CODE)");
sb.append("                AND C.SEQ_FRAME_NO = 'seq_frame_no'");
sb.append("                AND B.CLAIM_GB  = '30'");
sb.append("                AND B.CLAIM_DATE BETWEEN C.BTIME  AND FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE)");
sb.append("             UNION ALL");
sb.append("             SELECT C.BD_DATE                    AS BD_DATE,");
sb.append("                    C.BD_BTIME                   AS BD_BTIME,");
sb.append("                    C.PROG_CODE                  AS PROG_CODE,");
sb.append("                    C.SEQ_FRAME_NO               AS SEQ_FRAME_NO,");
sb.append("                    C.SEQ_NO                        AS SEQ_NO,");
sb.append("                    C.BD_FLAG                    AS BD_FLAG,");
sb.append("                    C.GOODS_CODE                 AS GOODS_CODE,");
sb.append("                    A.GOODS_NAME                 AS GOODS_NAME,");
sb.append("                      A.STOCK_CHK_PLACE             AS STOCK_CHK_PLACE,");
sb.append("                      FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE, C.MEDIA_CODE) AS SALE_END_TIME,");
sb.append("                    0                            AS SALE_TG_QTY,");
sb.append("                    C.BTIME                      AS BTIME,");
sb.append("                    C.ETIME                      AS ETIME,");
sb.append("                    D.COUNSEL_QTY                AS COUNSEL_QTY,");
sb.append("                    0                            AS ORDER_QTY,");
sb.append("                    0                            AS ORDER_AMT,");
sb.append("                    0                            AS CANCEL_QTY,");
sb.append("                    0                            AS CANCEL_AMT,");
sb.append("                    0                            AS NET_QTY,");
sb.append("                    0                            AS NET_AMT,");
sb.append("                    0                            AS ORDER_OK_QTY,");
sb.append("                    A.SET_YN                     AS SET_YN,");
sb.append("                    A.SALE_GB                    AS SALE_GB");
sb.append("               FROM TMULTIDTBROAD  C,");
sb.append("                    TGOODS    A,");
sb.append("                    TCOUNSEL  D");
sb.append("              WHERE C.BD_FLAG       = '20'");
sb.append("                AND C.GOODS_CODE    = A.GOODS_CODE");
sb.append("                AND C.GOODS_CODE    = D.GOODS_CODE");
sb.append("                AND D.MEDIA_GB      = '01'");
sb.append("                AND C.SEQ_FRAME_NO  = 'seq_frame_no'");
sb.append("                AND C.MEDIA_CODE    = D.MEDIA_CODE");
sb.append("             UNION ALL");
sb.append("               SELECT C.BD_DATE                    AS BD_DATE,");
sb.append("                      C.BD_BTIME                   AS BD_BTIME,");
sb.append("                      C.PROG_CODE                  AS PROG_CODE,");
sb.append("                      C.SEQ_FRAME_NO               AS SEQ_FRAME_NO,");
sb.append("                      C.SEQ_NO                      AS SEQ_NO,");
sb.append("                      C.BD_FLAG                    AS BD_FLAG,");
sb.append("                      C.GOODS_CODE                 AS GOODS_CODE,");
sb.append("                      A.GOODS_NAME                 AS GOODS_NAME,");
sb.append("                      A.STOCK_CHK_PLACE             AS STOCK_CHK_PLACE,");
sb.append("                      FUN_GET_SALE_END_TIME2 (C.BD_DATE,C.ETIME,C.GOODS_CODE,C.MEDIA_CODE) AS SALE_END_TIME,");
sb.append("                      0                            AS SALE_TG_QTY,");
sb.append("                      C.BTIME                      AS BTIME,");
sb.append("                      C.ETIME                      AS ETIME,");
sb.append("                      0                            AS COUNSEL_QTY,");
sb.append("                      0                            AS ORDER_QTY,");
sb.append("                      0                            AS ORDER_AMT,");
sb.append("                      0                            AS CANCEL_QTY,");
sb.append("                      0                            AS CANCEL_AMT,");
sb.append("                      0                            AS NET_QTY,");
sb.append("                      0                            AS NET_AMT,");
sb.append("                      FUN_GET_ORDER_ABLE_QTY(A.GOODS_CODE, '%', A.WH_CODE) AS ORDER_OK_QTY,");
sb.append("                      A.SET_YN                     AS SET_YN,");
sb.append("                      A.SALE_GB                    AS SALE_GB");
sb.append("                 FROM TMULTIDTBROAD     C,");
sb.append("                      TGOODS       A");
sb.append("                WHERE C.BD_FLAG    = '20'");
sb.append("                  AND C.GOODS_CODE = A.GOODS_CODE");
sb.append("                  AND C.SEQ_FRAME_NO = 'seq_frame_no'");
sb.append("           )  Y,");
sb.append("             TGOODSPRICE F,");
sb.append("           TMULTIFRAMESCHE G,");
sb.append("          (SELECT A.GOODS_CODE,");
sb.append("               SUM(A.AQTY) - SUM(B.ORDER_QTY) - SUM(B.OUT_PLAN_QTY) - SUM(NVL(C.COUNSEL_QTY, 0)) AS ORDER_POSSIBLE_QTY");
sb.append("          FROM TSTOCK A, TORDERSTOCK B, TCOUNSEL C");
sb.append("         WHERE A.GOODS_CODE = B.GOODS_CODE");
sb.append("           AND A.GOODSDT_CODE = B.GOODSDT_CODE");
sb.append("           AND A.WH_CODE = B.WH_CODE");
sb.append("           AND A.GOODS_CODE = C.GOODS_CODE(+)");
sb.append("           AND A.GOODSDT_CODE = C.GOODSDT_CODE(+)");
sb.append("         GROUP BY A.GOODS_CODE) H");
sb.append("     WHERE G.SEQ_FRAME_NO = Y.SEQ_FRAME_NO");
sb.append("       AND Y.GOODS_CODE   = F.GOODS_CODE");
sb.append("       AND F.APPLY_DATE   = (SELECT MAX(XX.APPLY_DATE)");
sb.append("                               FROM TGOODSPRICE XX");
sb.append("                              WHERE F.GOODS_CODE = XX.GOODS_CODE");
sb.append("                                AND XX.APPLY_DATE <");
sb.append("[CDATA[<=");
sb.append("]]>");
sb.append("G.BD_BTIME)");
sb.append("AND");
sb.append("Y.GOODS_CODE");
sb.append("=");
sb.append("H.GOODS_CODE");
sb.append("GROUP");
sb.append("BY");
sb.append("Y.SEQ_FRAME_NO,");
sb.append("Y.SEQ_NO,");
sb.append("Y.GOODS_CODE,");
sb.append("Y.GOODS_NAME,");
sb.append("Y.STOCK_CHK_PLACE,");
sb.append("Y.SALE_END_TIME,");
sb.append("F.SALE_PRICE");
sb.append("ORDER");
sb.append("BY");
sb.append("Y.SEQ_FRAME_NO,");
sb.append("TO_CHAR(MAX(Y.BTIME),");
sb.append("'HH24:MI'),");
sb.append("Y.GOODS_CODE");
sb.append(" ");
sb.append(" ;");
sb.append("              ");
sb.append("SELECT");
sb.append("/*");
sb.append("broadresult.xml");
sb.append(":");
sb.append("broadcast.broadresult.selectMultiBroadRealTimeGraph");
sb.append("by");
sb.append("MultiBroadRealTimeGraphController");
sb.append("*/");
sb.append("TO_CHAR(BB.START_TIME,");
sb.append("'YYYY/MM/DD");
sb.append("HH24MI')");
sb.append("AS");
sb.append("START_TIME,");
sb.append("FUN_ONETIME_GOODS_QTY2(F.SEQ_FRAME_NO,");
sb.append("BB.START_TIME)");
sb.append("AS");
sb.append("GOODS_CODES");
sb.append("FROM");
sb.append("TMULTIFRAMESCHE");
sb.append("F,");
sb.append("(");
sb.append("SELECT");
sb.append("AA.BD_BTIME+");
sb.append("ROWNUM");
sb.append("*");
sb.append("1/1440");
sb.append("AS");
sb.append("START_TIME");
sb.append("FROM");
sb.append("(");
sb.append("SELECT");
sb.append("F.BD_BTIME,");
sb.append("(LEAST(DECODE(LEAST(F.BD_ETIME,SYSDATE),SYSDATE,SYSDATE,F.BD_ETIME");
sb.append("),SYSDATE)");
sb.append("-");
sb.append("F.BD_BTIME)*1440");
sb.append("AS");
sb.append("DUAL_TIME");
sb.append("FROM");
sb.append("TMULTIFRAMESCHE");
sb.append("F,");
sb.append("TMULTIDTBROAD");
sb.append("D");
sb.append("WHERE");
sb.append("D.BD_FLAG");
sb.append("=");
sb.append("'20'");
sb.append("AND");
sb.append("F.SEQ_FRAME_NO");
sb.append("=");
sb.append("D.SEQ_FRAME_NO");
sb.append("AND");
sb.append("F.SEQ_FRAME_NO");
sb.append("=");
sb.append("'seq_frame_no'");
sb.append(")");
sb.append("AA,");
sb.append("TCODE");
sb.append("WHERE");
sb.append("ROWNUM");
sb.append("<![CDATA[<=");
sb.append("]]>");
sb.append("AA.DUAL_TIME");
sb.append(")");
sb.append("BB");
sb.append("WHERE");
sb.append("F.SEQ_FRAME_NO");
sb.append("=");
sb.append("'seq_frame_no'");
sb.append("");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------
toolbar.addComponent(new TextField("Promo Name"));
toolbar.addComponent(new TextField("Promo Name"));
toolbar.addComponent(new ComboBox("My ComboBox"));
toolbar.addComponent(new Button("Program Selection"));


//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("Program Order[Live] (MultiBroadRealTimeGraph)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
        addComponents(isicontents);
MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
table.addContainerProperty("No", String.class,  null);
table.addContainerProperty("ITEM", String.class,  null);
table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
   isicontents.addComponents(table);
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
