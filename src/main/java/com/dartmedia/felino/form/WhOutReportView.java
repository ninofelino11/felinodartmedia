package com.dartmedia.felino.form;
import com.dartmedia.felino.gSqlContainer;
import com.dartmedia.felino.fgetsql;
import com.dartmedia.felino.gSqlContainer;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import org.vaadin.maddon.fields.MTable;
import com.vaadin.event.LayoutEvents;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.TextField;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.DateField;
import com.vaadin.ui.PopupDateField;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import javax.annotation.PostConstruct;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("WhOutReport")
public class WhOutReportView extends MVerticalLayout implements View {
//WhOutReportSvc data=new WhOutReportSvc();
    @PostConstruct
    public void initComponent() {
// @Inject
//TbrandForm form;
/**Warehouse <p:selectOneListbox></p:selectOneListbox> Shipping date <p:calendar></p:calendar> ~ <p:calendar></p:calendar>L grp <p:inputText></p:inputText>             **/
StringBuffer sb = new StringBuffer();
sb.append("SELECT");
sb.append("/*");
sb.append("outreport.xml");
sb.append(":");
sb.append("logistics.outreport.selectSlipTotalCount");
sb.append("by");
sb.append("SlipTotalCount");
sb.append("*/");
sb.append("B.CREATE_SEQ,");
sb.append("B.PRE_DELY_YN,");
sb.append("C.CODE_MGROUP,");
sb.append("C.CODE_NAME,");
sb.append("NVL(SUM(B.WBORDER),");
sb.append("0)");
sb.append("AS");
sb.append("WBORDER,");
sb.append("NVL(SUM(B.WBCHANGE),");
sb.append("0)");
sb.append("AS");
sb.append("WBCHANGE,");
sb.append("NVL(SUM(B.WBORDER),");
sb.append("0)");
sb.append("+");
sb.append("NVL(SUM(B.WBCHANGE),");
sb.append("0)");
sb.append("AS");
sb.append("TOT");
sb.append("FROM");
sb.append("(");
sb.append("SELECT");
sb.append("TO_NUMBER(A.CREATE_SEQ)");
sb.append("AS");
sb.append("CREATE_SEQ,");
sb.append("A.PRE_DELY_YN,");
sb.append("A.DELY_GB,");
sb.append("SUM(DECODE(A.SLIP_GB,'104',0,1))");
sb.append("AS");
sb.append("WBORDER,");
sb.append("SUM(DECODE(A.SLIP_GB,'104',1,0))");
sb.append("AS");
sb.append("WBCHANGE");
sb.append("FROM");
sb.append("TSLIPM");
sb.append("A");
sb.append("WHERE");
sb.append("'104'");
sb.append(">=");
sb.append("A.SLIP_GB");
sb.append("AND");
sb.append("A.SLIP_FLAG");
sb.append("=");
sb.append("'1'");
sb.append("AND");
sb.append("A.DELY_TYPE");
sb.append("=");
sb.append("'10'");
sb.append("AND");
sb.append("A.CREATE_DATE");
sb.append("=");
sb.append("TO_DATE(#{create_date,");
sb.append("jdbcType=VARCHAR},");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("TO_NUMBER(A.CREATE_SEQ)");
sb.append("BETWEEN");
sb.append("#{seq_fr,");
sb.append("jdbcType=VARCHAR}");
sb.append("AND");
sb.append("#{seq_to,");
sb.append("jdbcType=VARCHAR}");
sb.append("AND");
sb.append("A.WH_CODE");
sb.append("LIKE");
sb.append("#{wh_code,");
sb.append("jdbcType=VARCHAR}");
sb.append("||'%'");
sb.append("AND");
sb.append("A.SLIP_PROC||''");
sb.append("LIKE");
sb.append("#{slip_proc,");
sb.append("jdbcType=VARCHAR}");
sb.append("||'%'");
sb.append("AND");
sb.append("A.DELY_GB");
sb.append("LIKE");
sb.append("#{dely_gb,");
sb.append("jdbcType=VARCHAR}");
sb.append("||'%'");
sb.append("/*");
sb.append("2011.06.13");
sb.append("진행단계");
sb.append("전체인");
sb.append("경우");
sb.append("아래의");
sb.append("경우만");
sb.append("표현되게(출고,배송완료)*/");
sb.append("AND");
sb.append("EXISTS");
sb.append("(SELECT");
sb.append("1");
sb.append("FROM");
sb.append("TCODE");
sb.append("WHERE");
sb.append("CODE_LGROUP");
sb.append("=");
sb.append("'L023'");
sb.append("AND");
sb.append("CODE_GROUP");
sb.append("=");
sb.append("'1'");
sb.append("AND");
sb.append("CODE_MGROUP");
sb.append("NOT");
sb.append("IN");
sb.append("('10',");
sb.append("'16',");
sb.append("'42',");
sb.append("'91')");
sb.append("AND");
sb.append("USE_YN");
sb.append("=");
sb.append("'1'");
sb.append("AND");
sb.append("A.SLIP_PROC");
sb.append("=");
sb.append("CODE_MGROUP");
sb.append(")");
sb.append("GROUP");
sb.append("BY");
sb.append("A.CREATE_SEQ,");
sb.append("A.PRE_DELY_YN,");
sb.append("A.DELY_GB");
sb.append(")");
sb.append("B,");
sb.append("TCODE");
sb.append("C");
sb.append("WHERE");
sb.append("B.DELY_GB");
sb.append("=");
sb.append("C.CODE_MGROUP");
sb.append("AND");
sb.append("C.CODE_LGROUP");
sb.append("=");
sb.append("'B005'");
sb.append("GROUP");
sb.append("BY");
sb.append("B.CREATE_SEQ,");
sb.append("B.PRE_DELY_YN,");
sb.append("C.CODE_MGROUP,");
sb.append("C.CODE_NAME");
sb.append("ORDER");
sb.append("BY");
sb.append("B.CREATE_SEQ,");
sb.append("B.PRE_DELY_YN,");
sb.append("C.CODE_MGROUP");
sb.append("</select>");
sb.append("<select");

sb.append("SELECT");
sb.append("/*");
sb.append("outreport.xml");
sb.append(":");
sb.append("logistics.outreport.selectWhOutReport");
sb.append("by");
sb.append("WhOutReport");
sb.append("*/");
sb.append("WH_CODE,");
sb.append("SUM(CHULGO_QTY)");
sb.append("AS");
sb.append("CHULGO_QTY,");
sb.append("SUM(CANCEL_QTY)");
sb.append("AS");
sb.append("CANCEL_QTY,");
sb.append("SUM(CHANGE_QTY)");
sb.append("AS");
sb.append("CHANGE_QTY,");
sb.append("SUM(RETURN_QTY)");
sb.append("AS");
sb.append("RETURN_QTY,");
sb.append("(SUM(CHULGO_QTY)");
sb.append("+");
sb.append("SUM(CHANGE_QTY)");
sb.append("-");
sb.append("SUM(CANCEL_QTY)");
sb.append("-");
sb.append("SUM(RETURN_QTY))");
sb.append("AS");
sb.append("TOTAL_QTY");
sb.append("FROM");
sb.append("(SELECT");
sb.append("A.WH_CODE,");
sb.append("SUM(DECODE(A.SLIP_GB,");
sb.append("'101',");
sb.append("B.DELY_QTY,");
sb.append("'102',");
sb.append("B.DELY_QTY,");
sb.append("'103',");
sb.append("B.DELY_QTY,");
sb.append("0))");
sb.append("AS");
sb.append("CHULGO_QTY,");
sb.append("SUM(DECODE(A.SLIP_GB,");
sb.append("'201',");
sb.append("(B.DELY_QTY");
sb.append("+");
sb.append("B.RETURN_QTY),");
sb.append("0))");
sb.append("AS");
sb.append("CANCEL_QTY,");
sb.append("SUM(DECODE(A.SLIP_GB,");
sb.append("'104',");
sb.append("B.DELY_QTY,");
sb.append("0))");
sb.append("AS");
sb.append("CHANGE_QTY,");
sb.append("SUM(DECODE(A.SLIP_GB,");
sb.append("'203',");
sb.append("(B.DELY_QTY");
sb.append("+");
sb.append("B.RETURN_QTY),");
sb.append("0))");
sb.append("AS");
sb.append("RETURN_QTY");
sb.append("FROM");
sb.append("TSLIPM");
sb.append("A,");
sb.append("TSLIPDT");
sb.append("B,");
sb.append("TGOODS");
sb.append("C");
sb.append("WHERE");
sb.append("A.SLIP_I_NO");
sb.append("=");
sb.append("B.SLIP_I_NO");
sb.append("AND");
sb.append("B.GOODS_CODE");
sb.append("=");
sb.append("C.GOODS_CODE");
sb.append("AND");
sb.append("A.OUT_CLOSE_YN");
sb.append("=");
sb.append("'1'");
sb.append("AND");
sb.append("A.REDELY_YN");
sb.append("=");
sb.append("'0'");
sb.append("AND");
sb.append("A.OUT_CLOSE_DATE");
sb.append("BETWEEN");
sb.append("TO_DATE('2013/11/01',");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("TO_DATE('2013/11/01',");
sb.append("'YYYY/MM/DD')");
sb.append("+");
sb.append("1");
sb.append("AND");
sb.append("C.LGROUP");
sb.append("LIKE");
sb.append("'%%'");
sb.append("AND");
sb.append("A.WH_CODE");
sb.append("='001'");
sb.append("GROUP");
sb.append("BY");
sb.append("A.WH_CODE)");
sb.append("GROUP");
sb.append("BY");
sb.append("WH_CODE");
sb.append("ORDER");
sb.append("BY");
sb.append("WH_CODE");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------

//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("Delivery Report (WhOutReport)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
        addComponents(isicontents);
MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
table.addContainerProperty("No", String.class,  null);
table.addContainerProperty("ITEM", String.class,  null);
table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
   isicontents.addComponents(table);
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
