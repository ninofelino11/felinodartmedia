package com.dartmedia.felino.form;
import com.vaadin.cdi.CDIView;
import org.vaadin.maddon.fields.MTable;
import com.vaadin.event.LayoutEvents;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import javax.annotation.PostConstruct;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("WhTransferOkList")
public class WhTransferOkListView extends MVerticalLayout implements View {
//WhTransferOkListSvc data=new WhTransferOkListSvc();
    @PostConstruct
    public void initComponent() {
// @Inject
//TbrandForm form;
/**Shipment warehouse <p:selectOneListbox>  </p:selectOneListbox>   Shipment term <p:calendar></p:calendar>Inquiry type <p:selectOneListbox></p:selectOneListbox>                                                                   **/
StringBuffer sb = new StringBuffer();
sb.append("SELECT");
sb.append("/*");
sb.append("warehousemove.xml");
sb.append(":");
sb.append("logistics.warehousemove.selectWhTransferOkListHd");
sb.append("by");
sb.append("WhTransferOkList");
sb.append("*/");
sb.append("A.MOVE_OUT_SEQ");
sb.append("AS");
sb.append("MOVE_OUT_SEQ,");
sb.append("B.WH_OUT_CODE");
sb.append("AS");
sb.append("WH_OUT_CODE,");
sb.append("B.WH_IN_CODE");
sb.append("AS");
sb.append("WH_IN_CODE,");
sb.append("TO_CHAR(B.REQUEST_DATE,");
sb.append("'YYYY/MM/DD')");
sb.append("AS");
sb.append("REQUEST_DATE,");
sb.append("TO_CHAR(B.OUT_DATE,");
sb.append("'YYYY/MM/DD')");
sb.append("AS");
sb.append("OUT_DATE,");
sb.append("A.GOODS_CODE");
sb.append("AS");
sb.append("GOODS_CODE,");
sb.append("G.GOODS_NAME");
sb.append("AS");
sb.append("GOODS_NAME,");
sb.append("A.GOODSDT_CODE");
sb.append("AS");
sb.append("GOODSDT_CODE,");
sb.append("G.GOODSDT_INFO");
sb.append("AS");
sb.append("GOODSDT_INFO,");
sb.append("A.OUT_AQTY");
sb.append("AS");
sb.append("OUT_AQTY,");
sb.append("A.OUT_BQTY");
sb.append("AS");
sb.append("OUT_BQTY,");
sb.append("NVL(H.IN_AQTY");
sb.append(",");
sb.append("0)");
sb.append("AS");
sb.append("IN_AQTY,");
sb.append("NVL(H.IN_BQTY");
sb.append(",");
sb.append("0)");
sb.append("AS");
sb.append("IN_BQTY,");
sb.append("A.OUT_AQTY");
sb.append("-");
sb.append("NVL(H.IN_AQTY,");
sb.append("0)");
sb.append("AS");
sb.append("D_AQTY,");
sb.append("A.OUT_BQTY");
sb.append("-");
sb.append("NVL(H.IN_BQTY,");
sb.append("0)");
sb.append("AS");
sb.append("D_BQTY,");
sb.append("B.REQUEST_REASON");
sb.append("AS");
sb.append("REQUEST_REASON");
sb.append("FROM");
sb.append("TWHMOVEOUTDT");
sb.append("A,");
sb.append("TWHMOVEOUTM");
sb.append("B,");
sb.append("TGOODSDT");
sb.append("G,");
sb.append("(SELECT");
sb.append("AA.GOODS_CODE");
sb.append("AS");
sb.append("GOODS_CODE,");
sb.append("AA.GOODSDT_CODE");
sb.append("AS");
sb.append("GOODSDT_CODE,");
sb.append("SUM(AA.IN_AQTY)");
sb.append("AS");
sb.append("IN_AQTY,");
sb.append("SUM(AA.IN_BQTY)");
sb.append("AS");
sb.append("IN_BQTY,");
sb.append("BB.MOVE_OUT_SEQ");
sb.append("AS");
sb.append("MOVE_OUT_SEQ");
sb.append("FROM");
sb.append("TWHMOVEINDT");
sb.append("AA,");
sb.append("TWHMOVEINM");
sb.append("BB,");
sb.append("TWHMOVEOUTM");
sb.append("CC");
sb.append("WHERE");
sb.append("CC.MOVE_OUT_SEQ");
sb.append("=");
sb.append("BB.MOVE_OUT_SEQ");
sb.append("AND");
sb.append("AA.MOVE_IN_SEQ");
sb.append("=");
sb.append("BB.MOVE_IN_SEQ");
sb.append("AND");
sb.append("CC.WH_OUT_CODE");
sb.append("='001'");
sb.append("AND");
sb.append("CC.OUT_DATE");
sb.append("BETWEEN");
sb.append("TO_DATE('2013/11/01',");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("TO_DATE('2013/11/30',");
sb.append("'YYYY/MM/DD')");
sb.append("GROUP");
sb.append("BY");
sb.append("AA.GOODS_CODE,");
sb.append("AA.GOODSDT_CODE,");
sb.append("BB.MOVE_OUT_SEQ");
sb.append(")");
sb.append("H");
sb.append("WHERE");
sb.append("(A.MOVE_OUT_SEQ");
sb.append("=");
sb.append("H.MOVE_OUT_SEQ(+)");
sb.append("AND");
sb.append("A.MOVE_OUT_SEQ");
sb.append("=");
sb.append("B.MOVE_OUT_SEQ");
sb.append("AND");
sb.append("A.GOODS_CODE");
sb.append("=");
sb.append("G.GOODS_CODE");
sb.append("AND");
sb.append("A.GOODSDT_CODE");
sb.append("=");
sb.append("G.GOODSDT_CODE");
sb.append("AND");
sb.append("A.GOODS_CODE");
sb.append("=");
sb.append("H.GOODS_CODE(+)");
sb.append("AND");
sb.append("A.GOODSDT_CODE");
sb.append("=");
sb.append("H.GOODSDT_CODE(+)");
sb.append("AND");
sb.append("B.DO_FLAG");
sb.append("=");
sb.append("'40'");
sb.append("AND");
sb.append("B.WH_OUT_CODE");
sb.append("=");
sb.append("'001'");
sb.append("AND");
sb.append("B.OUT_DATE");
sb.append("BETWEEN");
sb.append("TO_DATE('2013/11/01',");
sb.append("'YYYY/MM/DD')");
sb.append("AND");
sb.append("TO_DATE('2013/11/30',");
sb.append("'YYYY/MM/DD')");
sb.append(")");
sb.append("/*");
sb.append("<if");
sb.append("test='flag_gb");
sb.append("==");
//sb.append(""2"'>");
sb.append("AND");
sb.append("(A.OUT_AQTY");
sb.append("-");
sb.append("NVL(H.IN_AQTY,");
sb.append("0)");
sb.append(">");
sb.append("0");
sb.append("OR");
sb.append("A.OUT_BQTY");
sb.append("-");
sb.append("NVL(H.IN_BQTY,");
sb.append("0)");
sb.append(">");
sb.append("0)");
sb.append("</if>");
sb.append("*/");
sb.append("ORDER");
sb.append("BY");
sb.append("A.MOVE_OUT_SEQ,A.GOODS_CODE,A.GOODSDT_CODE");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------

//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("Transfer Out Report (WhTransferOkList)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
        addComponents(isicontents);
MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
table.addContainerProperty("No", String.class,  null);
table.addContainerProperty("ITEM", String.class,  null);
table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
   isicontents.addComponents(table);
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
