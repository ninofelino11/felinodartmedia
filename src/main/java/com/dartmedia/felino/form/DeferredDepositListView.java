package com.dartmedia.felino.form;
import com.dartmedia.felino.fgetsql;
import com.dartmedia.felino.gSqlContainer;
import com.dartmedia.felino.gSqlContainer;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import com.vaadin.event.LayoutEvents;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Notification;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.RichTextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.TreeTable;
import java.sql.SQLException;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.inject.Inject;
import org.vaadin.maddon.fields.MTable;
import org.vaadin.maddon.fields.MTable;
import org.vaadin.maddon.fields.MValueChangeEvent;
import org.vaadin.maddon.fields.MValueChangeListener;
import org.vaadin.maddon.label.Header;
import org.vaadin.maddon.layouts.MHorizontalLayout;
import org.vaadin.maddon.layouts.MVerticalLayout;
@CDIView("DeferredDepositList")
public class DeferredDepositListView extends MVerticalLayout implements View {
//DeferredDepositListSvc data=new DeferredDepositListSvc();
//@Inject   TenterpriseFacade cf;
//@Inject  TenterpriseForm form;
    @PostConstruct
    public void initComponent() {
/**Term <p:calendar></p:calendar>     ~ <p:calendar></p:calendar>Proc step <p:selectOneListbox></p:selectOneListbox> Shipment type <p:selectOneListbox></p:selectOneListbox> Payment type <p:selectOneListbox></p:selectOneListbox> <p:selectOneRadio><f:selectItem itemValue="Inquiry" /><f:selectItem itemValue="Indiv query" />  </p:selectOneRadio>Waybill no/ Delivery complete date <p:inputText></p:inputText>                                                                                              **/
StringBuffer sb = new StringBuffer();
sb.append("/*");
sb.append("BUKAN");
sb.append("DARI");
sb.append("SOURCE");
sb.append("*/");
sb.append("select");
sb.append("TWAREHOUSE.WH_NAME");
sb.append("as");
sb.append("Shipment,");
sb.append("TSLIPM.SLIP_NO");
sb.append("as");
sb.append("WaybillNo,");
sb.append("TSLIPDT.ORDER_NO");
sb.append("as");
sb.append("OrderNo,");
sb.append("TSLIPDT.GOODS_CODE");
sb.append("as");
sb.append("ItemCode,");
sb.append("TGOODS.GOODS_NAME");
sb.append("AS");
sb.append("ItemName,");
sb.append("TSLIPM.DELY_HOPE_DATE");
sb.append("AS");
sb.append("SHIPMENTDATE,");
sb.append("TSLIPM.REAL_DELY_DATE");
sb.append("AS");
sb.append("DELIVERYCOMPLETE,");
sb.append("TORDERRECEIPTS.RECEIPT_DATE");
sb.append("AS");
sb.append("PAYDATE,");
sb.append("code2.CODE_NAME");
sb.append("as");
sb.append("PaymentType,");
sb.append("code2.CODE_NAME");
sb.append("as");
sb.append("ApprovePaymentType,");
sb.append("TSLIPDT.DELY_AMT");
sb.append("as");
sb.append("Amount,");
sb.append("TORDERRECEIPTS.RECEIPT_AMT");
sb.append("as");
sb.append("PaymentAmt,");
sb.append("0");
sb.append("as");
sb.append("Commission");
sb.append("from");
sb.append("TSLIPM");
sb.append("left");
sb.append("join");
sb.append("TSLIPDT");
sb.append("on");
sb.append("TSLIPDT.SLIP_I_NO=TSLIPM.SLIP_I_NO");
sb.append("left");
sb.append("join");
sb.append("TDEPOSIT");
sb.append("on");
sb.append("TDEPOSIT.ORDER_NO=TSLIPDT.ORDER_NO");
sb.append("left");
sb.append("join");
sb.append("TORDERRECEIPTS");
sb.append("on");
sb.append("TORDERRECEIPTS.ORDER_NO=TSLIPDT.ORDER_NO");
sb.append("left");
sb.append("join");
sb.append("TGOODS");
sb.append("on");
sb.append("tgoods.GOODS_CODE=TSLIPDT.GOODS_CODE");
sb.append("left");
sb.append("join");
sb.append("TGOODSDT");
sb.append("on");
sb.append("tgoodsDT.GOODS_CODE=TSLIPDT.GOODS_CODE");
sb.append("and");
sb.append("tgoodsdt.GOODSDT_CODE=tslipdt.GOODSDT_CODE");
sb.append("left");
sb.append("join");
sb.append("TWAREHOUSE");
sb.append("on");
sb.append("twarehouse.WH_CODE=TSLIPM.WH_CODE");
sb.append("left");
sb.append("join");
sb.append("TCODE");
sb.append("on");
sb.append("tcode.CODE_MGROUP=TSLIPM.SLIP_PROC");
sb.append("and");
sb.append("tcode.CODE_LGROUP='J004'");
sb.append("left");
sb.append("join");
sb.append("TCODE");
sb.append("code2");
sb.append("on");
sb.append("code2.CODE_MGROUP=TORDERRECEIPTS.OK_MED");
sb.append("and");
sb.append("code2.CODE_LGROUP='J018'");
sb.append("where");
sb.append("TSLIPM.SLIP_FLAG=1");
sb.append("and");
sb.append("TSLIPM.SLIP_PROC_DATE>=TO_DATE('2013/11/01',");
sb.append("'yyyy/mm/dd')");
sb.append("and");
sb.append("TSLIPM.SLIP_PROC_DATE<=TO_DATE('2013/11/03',");
sb.append("'yyyy/mm/dd')");
sb.append("/*");
sb.append("DARI");
sb.append("IBATIS");
sb.append("*/");
sb.append("SELECT");
sb.append("/*");
sb.append("deferred.xml");
sb.append(":");
sb.append("custcenter.deferred.selectDeferredDepositList");
sb.append("by");
sb.append("DeferredDepositList");
sb.append("*/");
sb.append("TCODE_NAME('B005',DM.DELY_GB)");
sb.append("DELY_NAME,");
sb.append("DM.SLIP_NO,");
sb.append("DM.ORDER_NO,");
sb.append("SD.GOODS_CODE");
sb.append(",");
sb.append("GD.GOODS_NAME,");
sb.append("TO_CHAR(DM.OUT_DATE,'YYYY/MM/DD')");
sb.append("AS");
sb.append("OUT_DATE,");
sb.append("TO_CHAR(DM.DELY_DATE,'YYYY/MM/DD')");
sb.append("AS");
sb.append("DELY_DATE,");
sb.append("TO_CHAR(DD.DEPOSIT_DATE,'YYYY/MM/DD')");
sb.append("AS");
sb.append("DEPOSIT_DATE,");
sb.append("(SELECT");
sb.append("DECODE(COUNT(*),");
sb.append("1,");
sb.append("DECODE(MAX(R.SETTLE_GB),");
sb.append("'03',");
sb.append("TCODE_NAME('J018',");
sb.append("MAX(R.OK_MED)),");
sb.append("MIN(S.SETTLE_NAME)),");
sb.append("'MULTI')");
sb.append("FROM");
sb.append("TORDERRECEIPTS");
sb.append("R,");
sb.append("TSETTLEINFO");
sb.append("S");
sb.append("WHERE");
sb.append("R.SETTLE_GB");
sb.append("<![CDATA[<]]>");
sb.append("'50'");
sb.append("AND");
sb.append("R.CANCEL_YN");
sb.append("=");
sb.append("'0'");
sb.append("AND");
sb.append("R.ORDER_NO");
sb.append("=");
sb.append("SD.ORDER_NO");
sb.append("AND");
sb.append("R.SETTLE_GB");
sb.append("=");
sb.append("S.SETTLE_FLAG");
sb.append("AND");
sb.append("R.SETTLE_GB");
sb.append("=");
sb.append("DM.SETTLE_GB");
sb.append(")");
sb.append("AS");
sb.append("ORDER_SETTLE_NAME,");
sb.append("(SELECT");
sb.append("DECODE(COUNT(*),");
sb.append("1,");
sb.append("DECODE(MAX(R.SETTLE_GB),");
sb.append("'03',");
sb.append("TCODE_NAME('J018',");
sb.append("MAX(R.OK_MED)),");
sb.append("MIN(S.SETTLE_NAME)),");
sb.append("'MULTI')");
sb.append("FROM");
sb.append("TORDERRECEIPTS");
sb.append("R,");
sb.append("TSETTLEINFO");
sb.append("S");
sb.append("WHERE");
sb.append("R.SETTLE_GB");
sb.append("<![CDATA[<]]>");
sb.append("'50'");
sb.append("AND");
sb.append("R.CANCEL_YN");
sb.append("=");
sb.append("'0'");
sb.append("AND");
sb.append("R.ORDER_NO");
sb.append("=");
sb.append("SD.ORDER_NO");
sb.append("AND");
sb.append("R.SETTLE_GB");
sb.append("=");
sb.append("S.SETTLE_FLAG");
sb.append("AND");
sb.append("R.SETTLE_GB");
sb.append("=");
sb.append("DD.SETTLE_GB");
sb.append(")");
sb.append("AS");
sb.append("APPROVE_SETTLE_NAME,");
sb.append("DD.APPROVE_AMT,");
sb.append("DD.DEPOSIT_AMT,");
sb.append("DD.DEPOSIT_FEE,");
sb.append("DD.DEPOSIT_AMT-DD.DEPOSIT_FEE");
sb.append("AS");
sb.append("DEPOSIT_SUM");
sb.append("FROM");
sb.append("TDEFERRED_DELIVERYM");
sb.append("DM,");
sb.append("TDEFERRED_DELIVERYDT");
sb.append("DD,");
sb.append("TSLIPDT");
sb.append("SD,");
sb.append("TGOODS");
sb.append("GD");
sb.append("WHERE");
sb.append("DM.SLIP_I_NO");
sb.append("=");
sb.append("SD.SLIP_I_NO");
sb.append("AND");
sb.append("DM.SLIP_I_NO");
sb.append("=");
sb.append("DD.SLIP_I_NO(+)");
sb.append("AND");
sb.append("SD.GOODS_CODE=");
sb.append("GD.GOODS_CODE");
sb.append("AND");
sb.append("SD.REMARK2_N");
sb.append(">");
sb.append("0");
sb.append("/*");
sb.append("<choose>");
sb.append("<when");
// sb.append("test='unit_retrieve=="unitRetrieve"'>");
sb.append("<choose>");
sb.append("<when");
sb.append("test='select_number_type");
sb.append("==");
// sb.append(""slipNo"'>");
sb.append("AND");
sb.append("DM.SLIP_NO");
sb.append("=");
sb.append("#{input_number,jdbcType=VARCHAR}");
sb.append("</when>");
sb.append("<otherwise>");
sb.append("AND");
sb.append("DM.ORDER_NO");
sb.append("=");
sb.append("#{input_number,jdbcType=VARCHAR}");
sb.append("</otherwise>");
sb.append("</choose>");
sb.append("</when>");
sb.append("<otherwise>");
sb.append("AND");
sb.append("DM.DELY_GB");
sb.append("LIKE");
sb.append("#{dely_gb,jdbcType=VARCHAR}||'%'");
sb.append("<choose>");
sb.append("<when");
sb.append("test='select_date_type");
sb.append("==");
// sb.append(""outDate"");
sb.append("and");
sb.append("ok_med");
//sb.append("= "" and ok_med ");
sb.append("=");
sb.append("null'>");
sb.append("AND");
sb.append("EXISTS");
sb.append("(");
sb.append("SELECT");
sb.append("'X'");
sb.append("FROM");
sb.append("TORDERRECEIPTS");
sb.append("XA");
sb.append("WHERE");
sb.append("XA.ORDER_NO");
sb.append("=");
sb.append("SD.ORDER_NO");
sb.append("AND");
sb.append("XA.SETTLE_GB");
sb.append("=");
sb.append("DM.SETTLE_GB");
sb.append("AND");
sb.append("XA.CANCEL_YN");
sb.append("=");
sb.append("'0'");
sb.append("AND");
sb.append("XA.SETTLE_GB");
sb.append("=");
sb.append("'03'");
sb.append("AND");
sb.append("XA.OK_MED");
sb.append("=");
sb.append("#{ok_med,");
sb.append("jdbcType=VARCHAR}");
sb.append(")");
sb.append("</when>");
sb.append("<when");
sb.append("test='select_date_type");
//sb.append("= "outDate" and ok_med ");
sb.append("=");
//sb.append("""");
sb.append("and");
sb.append("ok_med");
sb.append("= null'>");
sb.append("               AND EXISTS (");
sb.append("                            SELECT 'X'");
sb.append("                              FROM TORDERRECEIPTS XA");
sb.append("                             WHERE XA.ORDER_NO = SD.ORDER_NO");
sb.append("                               AND XA.SETTLE_GB = DD.SETTLE_GB");
sb.append("                               AND XA.CANCEL_YN = '0'");
sb.append("                               AND XA.SETTLE_GB = '03'");
sb.append("                               AND XA.OK_MED = #{ok_med, jdbcType=VARCHAR}");
sb.append("                          )");
sb.append("                        </when>");
sb.append("                    </choose>");
sb.append("                    <if test='receipt ");
sb.append("=");
 //sb.append(""9"'>");
sb.append("AND");
sb.append("DD.DEPOSIT_YN");
sb.append("=");
sb.append("#{receipt,jdbcType=VARCHAR}");
sb.append("</if>");
sb.append("<choose>");
sb.append("<when");
sb.append("test='select_date_type");
sb.append("==");
// sb.append(""outDate"'>");
sb.append("AND");
sb.append("DM.OUT_DATE");
sb.append(">=");
sb.append("TO_DATE(#{from_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("AND");
sb.append("DM.OUT_DATE");
sb.append("<![CDATA[<]]>");
sb.append("TO_DATE(#{to_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("+");
sb.append("1");
sb.append("</when>");
sb.append("<when");
sb.append("test='select_date_type");
sb.append("==");
//sb.append(""deliveryEntDate"'>");
sb.append("AND");
sb.append("DM.DELY_DATE");
sb.append(">=");
sb.append("TO_DATE(#{from_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("AND");
sb.append("DM.DELY_DATE");
sb.append("<![CDATA[<]]>");
sb.append("TO_DATE(#{to_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("+");
sb.append("1");
sb.append("</when>");
sb.append("<otherwise>");
sb.append("AND");
sb.append("DD.DEPOSIT_DATE");
sb.append(">=");
sb.append("TO_DATE(#{from_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("AND");
sb.append("DD.DEPOSIT_DATE");
sb.append("<![CDATA[<]]>");
sb.append("TO_DATE(#{to_date,jdbcType=VARCHAR},'YYYY/MM/DD')");
sb.append("+");
sb.append("1");
sb.append("</otherwise>");
sb.append("</choose>");
sb.append("</otherwise>");
sb.append("</choose>");
sb.append("*/");
sb.append("ORDER");
sb.append("BY");
sb.append("DM.OUT_DATE,DM.DELY_DATE,");
sb.append("DM.SLIP_NO");
//String fsql = data.makeSql();
//gSqlContainer sumber=new gSqlContainer();
MHorizontalLayout sidebar = new MHorizontalLayout();
MHorizontalLayout isicontents=new MHorizontalLayout();
MHorizontalLayout toolbar = new MHorizontalLayout();
toolbar.addComponent(new CheckBox("Indv.Query"));
//TabSheet tabsheet = new TabSheet();
//-------------------- Header  ------------------------------

toolbar.addComponent(new CheckBox("Shipment Date"));
toolbar.addComponent(new CheckBox("Indv.Query"));
toolbar.addComponent(new PopupDateField("~"));
toolbar.addComponent(new PopupDateField("~"));
toolbar.addComponent(new CheckBox("Indv.Query"));
toolbar.addComponent(new ComboBox("Payement tYP"));
toolbar.addComponent(new ComboBox("My ComboBox"));


//-------------------- Header  ------------------------------
MHorizontalLayout toolmenu;
toolmenu = new MHorizontalLayout();
toolmenu.addComponent(new Button("Ret"));
toolmenu.addComponent(new Button("Ins"));
toolmenu.addComponent(new Button("Del"));
toolmenu.addComponent(new Button("Save"));
toolmenu.addComponent(new Button("Print"));
toolmenu.addComponent(new Button("XLS"));
        addComponents(
                new Header("COD Deposit Report (DeferredDepositList)"
        ));
        addComponents(toolmenu);
        addComponents(toolbar);
//        addComponents(isicontents);
//MTable table=new MTable();
//-------------------- Header Table ---judul untuk table----------
//List<Tenterprise> findAll = cf.findAll();
//MTable<Tenterprise> table=new MTable<Tenterprise>(Tenterprise.class).withProperties("entpName");
//table.setBeans(findAll);
//table.addMValueChangeListener(new MValueChangeListener<Tdescribecode>() {
//    @Override
//    public void valueChange(MValueChangeEvent<Tdescribecode> event) {
//    Notification.show("ss");
//    form.setEntity(event.getValue());
//    }
//    });
//table.addContainerProperty("No", String.class,  null);
//-------------------- Header Table ------------------------------
//   isicontents.addComponents(table);
try{
            SimpleJDBCConnectionPool connectionPool = new SimpleJDBCConnectionPool(
             "oracle.jdbc.OracleDriver", "jdbc:oracle:thin:@localhost:1521/XE",
             "dartmedia", "dartmedia",2,5);
             SQLContainer container;
              container = new SQLContainer(new FreeformQuery(
              sb.toString(),connectionPool,"AD_MENU_ID"));
             // MTable table= new MTable("MENU",container);
               TreeTable table = new TreeTable("Menu", container);
              addComponents(table);
 } catch (SQLException e) {
     e.printStackTrace();
     RichTextArea rtarea = new RichTextArea();
     rtarea.setValue(sb.toString());
      addComponents(rtarea);
}
        addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            @Override
            public void layoutClick(LayoutEvents.LayoutClickEvent event) {
            }
        });
    }
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
    }
}
